{"version":3,"sources":["components.jsx/MyCard.jsx","App.js","routes.js","pages/HomePage.jsx","pages/DetailPage.jsx","pages/NewPopupPage.jsx","serviceWorker.js","index.js"],"names":["MyCard","index","className","valign","style","backgroundImage","height","backgroundSize","backgroundPosition","color","href","f7params","name","routes","path","component","useState","Array","keys","items","setItems","allowInfinite","setAllowInfinite","showPreloader","setShowPreloader","infinite","infiniteDistance","infinitePreloader","onInfinite","setTimeout","tmpItems","length","itemsLength","i","push","title","map","item","key","f7router","id","backLink","pagination","src","width","alt","position","slot","ios","aurora","md","onClick","navigate","f7","toast","create","text","closeTimeout","open","popup","swipeToClose","swipeHandler","large","strong","noHairlinesMd","type","placeholder","clearButton","reloadAll","fill","params","main","url","Boolean","window","location","hostname","match","Framework7","use","Framework7React","ReactDOM","render","StrictMode","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c9c15e8a.chunk.js","sourcesContent":["import React from \"react\";\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  CardFooter,\n  Link,\n} from \"framework7-react\";\n\nconst MyCard = ({ index }) => {\n  return (\n    <Card className=\"demo-card-header-pic\">\n      <CardHeader\n        className=\"no-border\"\n        valign=\"bottom\"\n        style={{\n          backgroundImage: `url(https://cdn.framework7.io/placeholder/nature-1000x600-${\n            (index % 10) + 1\n          }.jpg)`,\n          height: \"40vw\",\n          backgroundSize: \"cover\",\n          backgroundPosition: \"center\",\n          color: \"#fff\",\n        }}\n      >\n        Journey To Mountains\n      </CardHeader>\n      <CardContent>\n        <p className=\"date\">Posted on January 21, 2015</p>\n        <p>\n          Quisque eget vestibulum nulla. Quisque quis dui quis ex ultricies\n          efficitur vitae non felis. Phasellus quis nibh hendrerit...\n        </p>\n      </CardContent>\n      <CardFooter>\n        <Link>Like</Link>\n        <Link href={`/detail/${index + 1}/`}>Read more</Link>\n      </CardFooter>\n    </Card>\n  );\n};\n\nexport default MyCard;\n","import React from \"react\";\nimport { App, View } from \"framework7-react\";\n\nimport routes from \"./routes\";\n\nconst f7params = {\n  name: \"Framework7 React Js\",\n  routes,\n};\n\nexport default () => (\n  <App params={f7params}>\n    <View main url=\"/\" />\n  </App>\n);\n","import HomePage from \"./pages/HomePage\";\nimport DetailPage from \"./pages/DetailPage\";\nimport NewPopupPage from \"./pages/NewPopupPage\";\n\nconst routes = [\n  {\n    path: \"/\",\n    component: HomePage,\n  },\n  {\n    path: \"/detail/:id/\",\n    component: DetailPage,\n  },\n  {\n    path: \"/new/\",\n    popup: {\n      component: NewPopupPage,\n    },\n  },\n];\n\nexport default routes;\n","import React, { useState } from \"react\";\n\nimport { Page, Navbar } from \"framework7-react\";\nimport MyCard from \"../components.jsx/MyCard\";\n\nconst HomePage = () => {\n  const [items, setItems] = useState([...Array(5).keys()]);\n  const [allowInfinite, setAllowInfinite] = useState(true);\n  const [showPreloader, setShowPreloader] = useState(true);\n\n  const _loadMore = () => {\n    if (!allowInfinite) return;\n    setAllowInfinite(false);\n\n    setTimeout(() => {\n      const tmpItems = items;\n\n      if (tmpItems.length >= 50) {\n        setShowPreloader(false);\n        return;\n      }\n\n      const itemsLength = tmpItems.length;\n\n      for (let i = 0; i <= 4; i += 1) {\n        tmpItems.push(itemsLength + i);\n      }\n\n      setItems(tmpItems);\n      setAllowInfinite(true);\n    }, 500);\n  };\n\n  return (\n    <Page\n      infinite\n      infiniteDistance={50}\n      infinitePreloader={showPreloader}\n      onInfinite={_loadMore}\n    >\n      <Navbar title=\"Home\" />\n      {items.map((item, index) => {\n        return <MyCard key={index} index={item} />;\n      })}\n    </Page>\n  );\n};\n\nexport default HomePage;\n","import React from \"react\";\n\nimport {\n  f7,\n  Page,\n  Navbar,\n  Swiper,\n  SwiperSlide,\n  Block,\n  Fab,\n  Icon,\n  FabButton,\n  FabButtons,\n} from \"framework7-react\";\n\nconst DetailPage = ({ f7router, id }) => {\n  const _clickShareButton = () => {\n    let toast = f7.toast.create({\n      text: \"Click Link Button!!!!\",\n      position: \"top\",\n      closeTimeout: 2000,\n    });\n    toast.open();\n  };\n\n  const _clickWriteButton = () => {\n    f7router.navigate(\"/new/\");\n  };\n\n  return (\n    <Page>\n      <Navbar title={`Detail ${id}`} backLink={true} />\n      <Swiper pagination>\n        <SwiperSlide>\n          <img\n            src={`https://cdn.framework7.io/placeholder/nature-1000x600-${\n              (id % 10) + 1\n            }.jpg`}\n            style={{\n              width: \"100vw\",\n            }}\n            alt=\"\"\n          />\n        </SwiperSlide>\n        <SwiperSlide>\n          {\" \"}\n          <img\n            src={`https://cdn.framework7.io/placeholder/nature-1000x600-${\n              (id % 10) + 1 + 1\n            }.jpg`}\n            style={{\n              width: \"100vw\",\n            }}\n            alt=\"\"\n          />\n        </SwiperSlide>\n        <SwiperSlide>\n          {\" \"}\n          <img\n            src={`https://cdn.framework7.io/placeholder/nature-1000x600-${\n              (id % 10) + 2 + 1\n            }.jpg`}\n            style={{\n              width: \"100vw\",\n            }}\n            alt=\"\"\n          />\n        </SwiperSlide>\n      </Swiper>\n      <Block>\n        <p>\n          Here comes paragraph within content block. Donec et nulla auctor massa\n          Here comes paragraph within content block. Donec et nulla auctor massa\n          pharetra adipiscing ut sit amet sem. Suspendisse molestie velit vitae\n          mattis tincidunt. Ut sit amet quam mollis, vulputate turpis vel,\n          sagittis felis. Here comes paragraph within content block. Donec et\n          nulla auctor massa pharetra adipiscing ut sit amet sem. Suspendisse\n          molestie velit vitae mattis tincidunt. Ut sit amet quam mollis,\n          vulputate turpis vel, sagittis felis. Here comes paragraph within\n          content block. Donec et nulla auctor massa pharetra adipiscing ut sit\n          amet sem. Suspendisse molestie velit vitae mattis tincidunt. Ut sit\n          amet quam mollis, vulputate turpis vel, sagittis felis. Here comes\n          paragraph within content block. Donec et nulla auctor massa pharetra\n          adipiscing ut sit amet sem. Suspendisse molestie velit vitae mattis\n          tincidunt. Ut sit amet quam mollis, vulputate turpis vel, sagittis\n          felis. Here comes paragraph within content block. Donec et nulla\n          auctor massa pharetra adipiscing ut sit amet sem. Suspendisse molestie\n          velit vitae mattis tincidunt. Ut sit amet quam mollis, vulputate\n          turpis vel, sagittis felis. pharetra adipiscing ut sit amet sem.\n          Suspendisse molestie velit vitae mattis tincidunt. Ut sit amet quam\n          mollis, vulputate turpis vel, sagittis felis. Here comes paragraph\n          within content block. Donec et nulla auctor massa pharetra adipiscing\n          ut sit amet sem. Suspendisse molestie velit vitae mattis tincidunt. Ut\n          sit amet quam mollis, vulputate turpis vel, sagittis felis. Here comes\n          paragraph within content block. Donec et nulla auctor massa pharetra\n          adipiscing ut sit amet sem. Suspendisse molestie velit vitae mattis\n          tincidunt. Ut sit amet quam mollis, vulputate turpis vel, sagittis\n          felis. Here comes paragraph within content block. Donec et nulla\n          auctor massa pharetra adipiscing ut sit amet sem. Suspendisse molestie\n          velit vitae mattis tincidunt. Ut sit amet quam mollis, vulputate\n          turpis vel, sagittis felis. Here comes paragraph within content block.\n          Donec et nulla auctor massa pharetra adipiscing ut sit amet sem.\n          Suspendisse molestie velit vitae mattis tincidunt. Ut sit amet quam\n          mollis, vulputate turpis vel, sagittis felis.{\" \"}\n        </p>\n      </Block>\n\n      <Fab position=\"right-bottom\" slot=\"fixed\" color=\"pink\">\n        <Icon ios=\"f7:plus\" aurora=\"f7:plus\" md=\"material:add\"></Icon>\n        <Icon ios=\"f7:xmark\" aurora=\"f7:xmark\" md=\"material:close\"></Icon>\n        <FabButtons position=\"left\">\n          <FabButton onClick={_clickWriteButton}>\n            <Icon\n              ios=\"f7:pencil\"\n              aurora=\"f7:pencil\"\n              md=\"material:pencil\"\n            ></Icon>\n          </FabButton>\n          <FabButton onClick={_clickShareButton}>\n            <Icon ios=\"f7:link\" aurora=\"f7:link\" md=\"material:link\"></Icon>\n          </FabButton>\n        </FabButtons>\n      </Fab>\n    </Page>\n  );\n};\n\nexport default DetailPage;\n","import React from \"react\";\n\nimport {\n  Page,\n  Popup,\n  BlockTitle,\n  Block,\n  List,\n  ListInput,\n  Button,\n} from \"framework7-react\";\n\nconst NewPopupPage = ({ f7router }) => {\n  const _submit = () => {\n    f7router.navigate(\"/\", {\n      reloadAll: true,\n    });\n  };\n\n  return (\n    <Popup\n      className=\"demo-popup-swipe-handler\"\n      swipeToClose\n      swipeHandler=\".swipe-handler\"\n    >\n      <Page>\n        <BlockTitle large>Form</BlockTitle>\n        <Block strong>\n          <p className=\"swipe-handler\">\n            <b>Try drag Here!</b>\n          </p>\n          <List noHairlinesMd>\n            <ListInput type=\"text\" placeholder=\"Test Text Input\" clearButton />\n\n            <ListInput\n              type=\"password\"\n              placeholder=\"Test Password Input\"\n              clearButton\n            />\n          </List>\n          <Button onClick={_submit} large fill>\n            Submit\n          </Button>\n        </Block>\n      </Page>\n    </Popup>\n  );\n};\n\nexport default NewPopupPage;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport Framework7 from \"framework7/framework7-lite.esm.bundle.js\";\nimport Framework7React from \"framework7-react\";\n\nimport \"framework7/css/framework7.bundle.min.css\";\nimport \"framework7-icons/css/framework7-icons.css\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nFramework7.use(Framework7React);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}